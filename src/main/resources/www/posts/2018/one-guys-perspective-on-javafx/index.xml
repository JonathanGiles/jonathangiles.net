<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<post>
		<ID>3014</ID>
		<Slug>one-guys-perspective-on-javafx</Slug>
		<Title>One guys perspective on JavaFX</Title>
		<Date>2018-03-27</Date>
		<Status>publish</Status>
		<Categories><![CDATA[Programming>Java>Java Client]]></Categories>
		<Tags/>
		<Content><![CDATA[<p>I've had a lot of people ask me about JavaFX, especially with the recent changes <a href="https://blogs.oracle.com/java-platform-group/the-future-of-javafx-and-other-java-client-roadmap-updates">announced by Oracle</a> (there are a few follow-up articles at <a href="https://www.infoworld.com/article/3261066/java/javafx-will-be-removed-from-the-java-jdk.html">infoworld</a> and <a href="https://jaxenter.com/javafx-separate-module-jdk-142253.html">jaxenter</a> for more information), and on my <a href="/posts/2018/farewell-oracle/">leaving Oracle late last year</a>. I've promised for a long time to add my thoughts to the discussion, but up until now I haven't actually done so. Let me rectify that now...</p>

<p>For those of you that didn't hear the news, Oracle announced plans related to Java client. In short, some Java client related technologies will be removed from JDK releases. Of most interest is the fact that applets, Java Web Start, and JavaFX will no longer be available in JDK 11 and later. JDK 11 may feel like a long way off given how slow Java releases have been in the past, but remember that with the new release cadence in effect, we've already seen JDK 10 released last week, and JDK 11 is due out in September, I believe. This means that from September people downloading the JDK will no longer be guaranteed to have applets, Java web start, or JavaFX APIs available on their machine.</p>

<p>I poured my heart into JavaFX for a really long time - since mid-2009 it was my full time job, firstly at Sun Microsystems and then at Oracle. It was a pleasure and a delight to work with so many smart, dedicated, and professional engineers during this time. I will always fondly remember the time I spent with them, and class it as a career highlight. Equally valued by me was the opportunity to work with such a smart, motivated, creative, and dedicated community of people who were using JavaFX in all manner of projects. It was truly heartening to know that my code was being used to further science, to help send things to space, to trade in markets, to create mobile apps, and so much more.</p>

<p>At the same time, as an engineer working with so many truly excellent engineers, it was heartbreaking to see people leaving Oracle, but this was an all-too-common experience as budgets became tighter and tighter. Java is an open source project, with applications ranging from the smallest of profiles right up to hugely complex computing needs. It can be extraordinarily hard to monetise open source work, and it can therefore be challenging to justify continued investment into engineering efforts where there is no direct benefit. At the end of the day, my feeling is that JavaFX simply fell into this void - whilst there are some Oracle products using JavaFX, there wasn't enough, and thus justification for ongoing investment became a tough sell, with investment waning over time. Every time we lost some engineers, I felt that surely, we couldn't cut anymore - but I was all too frequently wrong.</p>

<p>That takes us to today. Oracle has made it clear that it is now in the communities hands to ensure JavaFX flourishes. The process for developing JavaFX itself is opening up, and <a href="http://mail.openjdk.java.net/pipermail/openjfx-dev/2018-February/021335.html">simplification of the build process</a> makes it more possible to become involved. Discussions are underway into <a href="http://mail.openjdk.java.net/pipermail/openjfx-dev/2018-March/021624.html">moving JavaFX into modules</a> available via Maven repositories. One day soon JavaFX will be a compile-time dependency that you include in your build script. You won't care what version of the JDK your end-users have installed, because your build script will compile a native installer with an embedded JDK image, containing everything you need. Developers will create or coalesce around a new project for ensuring easy application updates. In other words, things needn't be so glum. It's a case of the King is dead, long live the King!</p>

<p>But challenges do abound. Unlike nature, JavaFX won't simply adapt for free. There is a lot that must be done, including all I wrote above. Beyond that, what is JavaFX? Who defines it and how does it evolve? How does it become something community owned? Is it forever bound to the OpenJDK, or does it transition to a third party (not unlike Java EE)? Community involvement at this juncture is critical - as the process opens itself up it also becomes ever-more dependent on those who form this community to bring their resources to the fore, or the risk is that JavaFX will wither and die.</p>

<p>In short, there are many ways one can choose to look at this announcement. I've had many more months to appreciate this plan than the wider community, but I feel like I straddle the entire emotional spectrum on this :-) It goes without saying that I would have loved to have seen Oracle growing investment in JavaFX, so there is sadness in me that this didn't happen. On the other hand, it is easy to see the lack of business sense in doing this. I think my main emotion now is concern - I really do hope that the community steps up. If it doesn't, JavaFX will be no longer, and this is a real risk. On the other hand, if the community does step up (and I mean this extremely generally - I hope individuals bring their skills in coding, documentation, testing, advocacy, etc, but I also hope that deep-pocketed companies help to sustain these developers financially), then we may see something amazing happen. Already there are positive signs:&nbsp;<a href="http://www.gluonhq.com">Gluon</a> has already worked with Oracle to <a href="https://github.com/javafxports/openjdk-jfx">create a repo on GitHub</a> that enables community interaction and contributions, and there are a number of people already adding improvements into it.</p>

<p>I really hope we see something amazing happen.</p>

<p>I really, really hope that we see something amazing happen.</p>

<p>Finally, I feel like I should finish by saying: Java client was my home for a very long time. I've loved working with all of you, and I wish you all the best in everything you do. My time at Sun and Oracle was special. If you have the willingness to join in on JavaFX now, then you should reach out to the <a href="http://mail.openjdk.java.net/mailman/listinfo/openjfx-dev">openjfx-dev mailing list</a>. I will remain involved however I can (certainly with <a href="http://controlsfx.org">ControlsFX</a> and <a href="http://www.scenic-view.org">Scenic View</a>, and the desktop links post), but it is an outside of Oracle role from here on out :-)</p>
]]></Content>
	</post>
