<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<post>
		<ID>389</ID>
		<Slug>java-desktop-links-of-the-week-june-15</Slug>
		<Title>Java desktop links of the week, June 15</Title>
		<Date>2009-06-14</Date>
		<Status>publish</Status>
		<Categories><![CDATA[Programming>Java>Java Client]]></Categories>
		<Tags>java</Tags>
		<Content><![CDATA[<p>Well, having skipped a post whilst I was at JavaOne, I was well aware that there would be a huge catchup necessary. Not surprisingly, the bulk of this weeks post is JavaFX.</p>

<p>To everyone out there reading this - enjoy. Have a fun week, try not to catch Swine flu, and for those of you in the northern hemisphere, don't remind me that you're enjoying Summer too often.</p>
<h3>Swing</h3>
<ul>
	<li>One of the people I met at JavaOne, <strong>Ken Orr</strong> has just posted the <a href="http://explodingpixels.wordpress.com/2009/06/07/simply-sweet-components-slides/">slides to his 'Simply Sweet Components' presentation</a>. Definitely well worth checking out!</li>
	<li>Very little news at JavaOne was made about JWebPane. The general jist that I got from a few managers at Sun is that the debate is about how to release the component - i.e. should it be included with the JDK/JRE, or should it be a separate jar/module? <strong>Ken Orr</strong> <a href="http://explodingpixels.wordpress.com/2009/06/05/jwebpane-update">summarises this in a post</a> with a few decent comments. Finally, the last word of course goes to <strong>Alexey Ushakov</strong>, the guy in charge of the JWebPane project. He posted a <a href="http://weblogs.java.net/blog/alex2d/archive/2009/06/_jwebpane_bof_s.html">link to his JavaOne slides for more information</a>.</li>
	<li><strong>Kirill Grouchnikov</strong> posts about the <a href="http://www.pushing-pixels.org/?p=1262">Flamingo ribbon component now supporting small buttons in ribbon galleries</a>. He also posted <a href="http://www.pushing-pixels.org/?p=1257">links to the slides he used at JavaOne for his Flamingo talk</a>.</li>
</ul>
<h3>JavaFX</h3>
<ul>
	<li>Got something to say about JavaFX 1.2? Blog about it and you may win $500 or a $25 Amazon gift card from Sun. <a href="http://www.javafx.com/blogcontest/">Find out more here</a>. Frankly I should win for my services to the community ;-)</li>
	<li><strong>Richard Bair</strong> and <strong>Jasper Potts</strong>, both of the JavaFX team at Sun, have taken it upon themselves to increase the amount and quality of information around about JavaFX. To this end, they have started <a href="http://fxexperience.com/">FXExperience.com</a>, which appears to be a very good source of information, straight from the horses mouth. It so far has been regularly updated, so keep an eye on it!</li>
	<li><strong>Richard Bair</strong> has just posted an article discussing the <a href="http://fxexperience.com/2009/06/skinning-architecture-in-javafx/">skinning architecture in JavaFX</a>. Previously he also posted an <a href="http://fxexperience.com/2009/06/caspian-skin/">article on the Caspian skin introduced in JavaFX 1.2</a>.</li>
	<li>Following JavaOne, <strong>Amy Fowler</strong> has put up another useful post, this time on the "<a href="http://weblogs.java.net/blog/aim/archive/2009/06/insiders_guide_1.html">insider's guide to blending Swing and JavaFX</a>". This is certainly a very good read for anyone wishing to dip their toes into JavaFX.</li>
	<li><strong>Chris Campbell</strong> has also made a post-JavaOne blog post on the effects framework he was responsible for in JavaFX. In this post, he shows how <a href="http://weblogs.java.net/blog/campbell/archive/2009/06/effects_in_java_1.html">it is possible to chain effects in JavaFX, but that order matters to get good looking effects</a>.</li>
	<li><strong>James Clarke</strong> posts an <a href="http://blogs.sun.com/clarkeman/entry/javafx_async_task">indepth tutorial on the JavaFX async task</a>. For anyone writing JavaFX applications where any decent amount of work is running on the CPU, get to know the details in this post, lest your users abuse you for a slow and unresponsive GUI.</li>
	<li>Another <a href="http://blogs.sun.com/baechul/entry/javafx_1_2_async">article on the async task in JavaFX</a> was written by <strong>Baechul</strong>, and this one includes pictures for any attention deficit disorder sufferers among us.</li>
	<li><strong>Josh Marinacci</strong> posts his <a href="http://weblogs.java.net/blog/joshy/archive/2009/06/top_5_most_impo.html">five most important features in JavaFX 1.2</a>. In summary, the top five are Linux/Solaris support, UI controls, charts, data persistence, and speeeeeeeed.</li>
	<li>Speaking of charts, <strong>Dean Iverson</strong> posts an <a href="http://pleasingsoftware.blogspot.com/2009/06/this-is-test.html">article on creating charts in JavaFX 1.2 using the chart API</a>. He also has a post on <a href="http://pleasingsoftware.blogspot.com/2009/06/creating-xycharts-in-javafx.html">creating XY charts</a> using the same API.</li>
	<li><strong>Dean Iverson </strong>put out a <a href="http://code.google.com/p/jfxtras/">new beta version (0.5) of his JFXtras core library for JavaFX</a>. This release makes it JavaFX 1.2 compatible.</li>
	<li><strong>Stephen Chin</strong> released a <a href="http://refcardz.dzone.com/refcardz/getting-started-javafx?oid=hom10714">refcard on DZone which introduces people to JavaFX 1.2</a>. It is a good introduction if you want to learn the basic concepts.</li>
	<li>Speaking of <strong>Stephen Chin</strong>, his <a href="http://widgetfx.org">widgetFX project</a> has a <a href="http://widgetfx.org/portal/contest">competition running currently that has the prize of a copious amount of ebooks to lure you in</a>. Check it out if you think you can write a widget for the widgetFX sidebar, and are short on ebooks.</li>
	<li><strong>Thomas KÃ¼nneth</strong> posts on '<a href="http://today.java.net/pub/a/today/2009/06/02/hacking-javafx-binding.html">hacking JavaFX binding</a>'. This article takes a closer look at its internal structure and demonstrates how JavaFX Binding can be "misused" as a binding framework for Swing.</li>
	<li><strong>Fabrizio Giudici</strong> posts on <a href="http://netbeans.dzone.com/articles/how-use-junit-test-your-javafx">how to use JUnit to test JavaFX applications within the NetBeans IDE</a>. It involves patching JUnit, which leaves me feeling a little uncomfortable. Hopefully this may be simplified in the future.</li>
	<li>In another post, <strong>Fabrizio Giudici</strong> posts on <a href="http://weblogs.java.net/blog/fabriziogiudici/archive/2009/06/writing_a_ui_co.html">using JavaFX Script in the controller part of a MVC application</a>.</li>
	<li>Finally, <strong>Fabrizio</strong> mentions that <a href="http://weblogs.java.net/blog/fabriziogiudici/archive/2009/06/javafx_binding.html">whilst binding in JavaFX is cool, you should be very careful when using it</a>.</li>
	<li><strong>Dmitry Kostovarov</strong> posts a <a href="http://javafx.com/docs/techtips/use_java_api/">quick example of how to use the JFileChooser Swing component in JavaFX</a>. Pretty obvious stuff really. Just remember this means that the application is no longer able to be used in the 'common' profile.</li>
	<li><strong>Seema Gupta</strong> has two posts, one on <a href="http://blogs.sun.com/seemag/entry/beginner_s_gotchas_in_javafx">the effect of calling functions on null objects in JavaFX</a>, and the other on <a href="http://blogs.sun.com/seemag/entry/storing_data_on_client_system">how to store data on the local filesystem</a>.</li>
	<li><strong>Rakesh Menon</strong> has two posts, one on <a href="http://blogs.sun.com/rakeshmenonp/entry/javafx_skinnable_controls">skinning controls in JavaFX</a> and the other on <a href="http://blogs.sun.com/rakeshmenonp/entry/javafx_passing_arguments">passing arguments to a JavaFX application</a>, and subsequently retrieving and using them within the code.</li>
	<li>If you're wanting to develop using JavaFX Script, but are tied to Eclipse, Exadel has a <a href="http://www.exadel.com/web/portal/javafxstudio">plugin for Eclipse to make developing JavaFX easier</a>. They also have a <a href="http://mkblog.exadel.com/ria/javafx-ria/getting-started-with-javafx-and-javafx-studio-plug-in-for-eclipse/">tutorial post up to explain how to set it up</a>.</li>
	<li><strong>Start Class 0830</strong> has a post up titled '<a href="http://startclass0830.blogspot.com/2009/06/javafx-and-google-maps.html">JavaFX and Google Maps</a>', which allows for a person to see a portion of a map by inputting either a location, or the lattitude and longitude values directly.</li>
</ul>
<h3>Griffon</h3>
<ul>
	<li><strong>Geertjan </strong><span><strong>Wielenga</strong> has been busy posting a number of articles on Griffon. Firstly, he highlights <a href="http://blogs.sun.com/geertjan/entry/griffon_pre_alpha_netbeans_plugin">how to use NetBeans with the new Griffon plugin</a>. He then wrote a series of articles on how to incorporate a wizard into a Griffon application - you can see parts <a href="http://blogs.sun.com/geertjan/entry/how_to_incorporate_a_wizard">1</a>, <a href="http://blogs.sun.com/geertjan/entry/how_to_incorporate_a_wizard1">2</a>, <a href="http://blogs.sun.com/geertjan/entry/how_to_incorporate_a_wizard2">3</a> and <a href="http://blogs.sun.com/geertjan/entry/how_to_incorporate_a_wizard3">4</a> for all of the relevant information. Finally, he wrote an article on <a href="http://java.dzone.com/news/draft-how-groovy-helps-javafx">how to use Groovy as the model in a JavaFX application</a>.</span></li>
	<li><span>Another big believer in Griffon is of course <strong>Andres Almiray</strong>, and he has been blogging prolifically in the last two weeks. He has posted articles on <a href="http://www.jroller.com/aalmiray/entry/griffon_gsql_mini_howto">embedding GSQL into Griffon to act as a database</a>, <a href="http://www.jroller.com/aalmiray/entry/styling_a_griffon_application">styling a Griffon application</a> using <a href="http://www.jroller.com/aalmiray/entry/cssbuilder_and_plugin_released">CSSBuilder</a> (find out more about the <a href="http://www.jroller.com/aalmiray/entry/cssbuilder_update">latest CSSBuilder release</a> also). Finally, Andres posts about <a href="http://www.jroller.com/aalmiray/entry/another_look_at_fxbuilder_griffon">FXBuilder, a builder which will allow for you to embed JavaFX inside a Griffon application</a>.</span></li>
	<li><span>If you want to learn more about Griffon, <strong>Bob</strong> at Transentia posts an article titled '<a href="http://www.transentia.com.au/flatpress/?x=entry:entry090603-111307">Riding the Griffon</a>' that gives a good introduction with a sample application. Additionally, <strong>Juxie.com</strong> posts two articles talking about <a href="http://www.juixe.com/techknow/index.php/2009/06/09/grinding-griffon-the-setup/">setting up</a> and <a href="http://www.juixe.com/techknow/index.php/2009/06/09/grinding-griffon-the-hit/">using Griffon</a>.</span></li>
</ul>
<p>And that's us for another week! Keep out of (too much) trouble :-)</p>
]]></Content>
	</post>
